# Generated by Django 5.1 on 2025-07-15 18:57

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models
import datetime # Adicionado: Importar datetime para o RunSQL

class Migration(migrations.Migration):

    dependencies = [
        ('usuarios', '0007_alter_usuario_email'),
    ]

    operations = [
        # Operações de alteração de opções de modelo (Meta options)
        migrations.AlterModelOptions(
            name='paciente',
            options={'verbose_name': 'Paciente', 'verbose_name_plural': 'Pacientes'},
        ),
        migrations.AlterModelOptions(
            name='sessao',
            options={'ordering': ['data'], 'verbose_name': 'Sessão', 'verbose_name_plural': 'Sessões'},
        ),
        migrations.AlterModelOptions(
            name='usuario',
            options={},
        ),
        migrations.AlterModelManagers(
            name='usuario',
            managers=[
            ],
        ),

        # Operações de remoção de campos
        migrations.RemoveField(
            model_name='paciente',
            name='email',
        ),
        migrations.RemoveField(
            model_name='paciente',
            name='id',
        ),
        migrations.RemoveField(
            model_name='usuario',
            name='date_joined',
        ),

        # ----------------------------------------------------------------------
        # INÍCIO DA CORREÇÃO PARA O CAMPO 'duracao' DO MODELO 'Sessao'
        # Esta operação de SQL irá:
        # 1. Tentar remover QUALQUER restrição CHECK que compare INTERVAL com INTEGER.
        # 2. Garantir que não haja valores NULL na coluna (se o campo não permitir NULLs).
        # 3. Converter os valores INTEGER existentes para o tipo INTERVAL.
        migrations.RunSQL(
            sql="""
            -- 1. Tenta identificar e remover qualquer restrição CHECK na coluna 'duracao' da tabela 'usuarios_sessao'.
            DO $$
            DECLARE
                r RECORD;
            BEGIN
                FOR r IN (
                    SELECT conname
                    FROM pg_constraint
                    WHERE conrelid = 'usuarios_sessao'::regclass
                    AND conname LIKE '%duracao%' -- Busca restrições que contenham 'duracao' no nome
                    AND contype = 'c' -- Apenas restrições de VERIFICAÇÃO (CHECK)
                ) LOOP
                    EXECUTE 'ALTER TABLE usuarios_sessao DROP CONSTRAINT IF EXISTS ' || quote_ident(r.conname) || ';';
                    RAISE NOTICE 'Restrição CHECK removida: %', r.conname;
                END LOOP;
            END $$;

            -- 2. Garante que não há valores NULL na coluna 'duracao' antes da conversão de tipo.
            -- Isso é crucial se o campo 'duracao' for NOT NULL no seu modelo.
            UPDATE usuarios_sessao SET duracao = 0 WHERE duracao IS NULL;

            -- 3. Altera o tipo da coluna 'duracao' de INTEGER para INTERVAL.
            -- Assume que o valor INTEGER anterior representava minutos.
            ALTER TABLE usuarios_sessao ALTER COLUMN duracao TYPE INTERVAL USING (duracao || ' minutes')::INTERVAL;
            """,
            # SQL para a operação "para trás" (reverter a migração):
            # Reverte a coluna para INTEGER, pegando o total de segundos do INTERVAL e dividindo por 60 para obter minutos.
            reverse_sql="""
            ALTER TABLE usuarios_sessao ALTER COLUMN duracao TYPE INTEGER USING EXTRACT(EPOCH FROM duracao)::INTEGER / 60;
            """,
        ),
        # A declaração AlterField abaixo é necessária para o Django reconhecer a mudança do tipo do campo.
        migrations.AlterField(
            model_name='sessao',
            name='duracao',
            field=models.DurationField(help_text='Duração da sessão'),
        ),
        # ----------------------------------------------------------------------

        # A partir daqui, as operações estão na ordem original, após as remoções e a correção do 'duracao'

        # Alterações de campo no modelo Mensagem
        migrations.AlterField(
            model_name='mensagem',
            name='assunto',
            field=models.CharField(blank=True, max_length=255),
        ),

        # Alterações de campo no modelo Paciente
        migrations.AlterField(
            model_name='paciente',
            name='alergias',
            field=models.TextField(blank=True, default=''),
        ),
        migrations.AlterField(
            model_name='paciente',
            name='cep',
            field=models.CharField(blank=True, default='', max_length=9),
        ),
        migrations.AlterField(
            model_name='paciente',
            name='data_nascimento',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='paciente',
            name='emergencia_nome',
            field=models.CharField(blank=True, default='', max_length=255),
        ),
        migrations.AlterField(
            model_name='paciente',
            name='emergencia_telefone',
            field=models.CharField(blank=True, default='', max_length=20),
        ),
        migrations.AlterField(
            model_name='paciente',
            name='endereco',
            field=models.CharField(blank=True, default='', max_length=255),
        ),
        migrations.AlterField(
            model_name='paciente',
            name='historico_medico',
            field=models.TextField(blank=True, default=''),
        ),
        migrations.AlterField(
            model_name='paciente',
            name='medicamentos',
            field=models.TextField(blank=True, default=''),
        ),
        migrations.AlterField(
            model_name='paciente',
            name='nome_completo',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='paciente',
            name='telefone',
            field=models.CharField(blank=True, default='', max_length=20),
        ),
        migrations.AlterField(
            model_name='paciente',
            name='terapeuta',
            field=models.ForeignKey(blank=True, limit_choices_to={'tipo': 'terapeuta'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pacientes_associados_terapeuta', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='paciente',
            name='usuario',
            field=models.OneToOneField(default=1, limit_choices_to={'tipo': 'paciente'}, on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='perfil_paciente', serialize=False, to=settings.AUTH_USER_MODEL),
            preserve_default=False,
        ),

        # Alterações de campo no modelo Relatorio
        migrations.AlterField(
            model_name='relatorio',
            name='paciente',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='relatorios_recebidos', to='usuarios.paciente'),
        ),
        migrations.AlterField(
            model_name='relatorio',
            name='terapeuta',
            field=models.ForeignKey(limit_choices_to={'tipo': 'terapeuta'}, on_delete=django.db.models.deletion.CASCADE, related_name='relatorios_criados', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='relatorio',
            name='titulo',
            field=models.CharField(max_length=255),
        ),

        # Alterações de campo no modelo Sessao (as demais, além de 'duracao')
        migrations.AlterField(
            model_name='sessao',
            name='observacoes',
            field=models.TextField(blank=True, default=''),
        ),
        migrations.AlterField(
            model_name='sessao',
            name='paciente',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessoes_do_paciente', to='usuarios.paciente'),
        ),
        migrations.AlterField(
            model_name='sessao',
            name='status',
            field=models.CharField(choices=[('agendada', 'Agendada'), ('concluida', 'Concluída'), ('cancelada', 'Cancelada')], default='agendada', max_length=10),
        ),
        migrations.AlterField(
            model_name='sessao',
            name='terapeuta',
            field=models.ForeignKey(limit_choices_to={'tipo': 'terapeuta'}, on_delete=django.db.models.deletion.CASCADE, related_name='sessoes_como_terapeuta', to=settings.AUTH_USER_MODEL),
        ),

        # Alterações de campo no modelo Usuario
        migrations.AlterField(
            model_name='usuario',
            name='cep',
            field=models.CharField(blank=True, default='', max_length=9),
        ),
        migrations.AlterField(
            model_name='usuario',
            name='cpf',
            field=models.CharField(blank=True, default='', max_length=14),
        ),
        migrations.AlterField(
            model_name='usuario',
            name='crp',
            field=models.CharField(blank=True, default='', max_length=20, verbose_name='CRP'),
        ),
        migrations.AlterField(
            model_name='usuario',
            name='endereco',
            field=models.CharField(blank=True, default='', max_length=255),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='usuario',
            name='especialidade',
            field=models.CharField(blank=True, default='', max_length=255),
        ),
        migrations.AlterField(
            model_name='usuario',
            name='first_name',
            field=models.CharField(blank=True, max_length=150, verbose_name='Nome'),
        ),
        migrations.AlterField(
            model_name='usuario',
            name='foto_perfil',
            field=models.ImageField(blank=True, null=True, upload_to='fotos_perfil/'),
        ),
        migrations.AlterField(
            model_name='usuario',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AlterField(
            model_name='usuario',
            name='is_staff',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='usuario',
            name='last_name',
            field=models.CharField(blank=True, max_length=150, verbose_name='Sobrenome'),
        ),
        migrations.AlterField(
            model_name='usuario',
            name='telefone',
            field=models.CharField(blank=True, default='', max_length=20, validators=[django.core.validators.RegexValidator(message='Número inválido', regex='^\\+?1?\\d{9,15}$')]),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='usuario',
            name='tipo',
            field=models.CharField(choices=[('paciente', 'Paciente'), ('terapeuta', 'Terapeuta'), ('admin', 'Administrador')], default='paciente', max_length=10),
        ),
        migrations.AlterField(
            model_name='usuario',
            name='username',
            field=models.CharField(blank=True, max_length=150, null=True, unique=True),
        ),

        # Criação do modelo Notificacao (deve ser a última operação)
        migrations.CreateModel(
            name='Notificacao',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('geral', 'Geral'), ('sessao', 'Sessão'), ('mensagem', 'Mensagem'), ('alerta', 'Alerta'), ('sistema', 'Sistema')], default='geral', max_length=20, verbose_name='Tipo')),
                ('assunto', models.CharField(max_length=255, verbose_name='Assunto')),
                ('conteudo', models.TextField(verbose_name='Conteúdo')),
                ('link', models.URLField(blank=True, max_length=500, null=True, verbose_name='Link')),
                ('lida', models.BooleanField(default=False, verbose_name='Lida')),
                ('data_criacao', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Data de Criação')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notificacoes', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Notificação',
                'verbose_name_plural': 'Notificações',
                'ordering': ['-data_criacao'],
            },
        ),
    ]